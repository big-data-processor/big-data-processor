class BdpEventEmitter{constructor(){this.events={}}_getEventListByName(e){return void 0===this.events[e]&&(this.events[e]=new Set),this.events[e]}on(e,t){this._getEventListByName(e).add(t)}once(e,t){const i=this,a=function(...s){i.removeListener(e,a),t.apply(i,s)};this.on(e,a)}emit(e,...t){this._getEventListByName(e).forEach(function(e){e.apply(this,t)}.bind(this))}removeListener(e,t){this._getEventListByName(e).delete(t)}}const ArgumentType={STATIC:"static",VALUE:"value",LIST:"list",INFILE:"inFile",OUTFILE:"outFile"},TaskType={STANDARD:"standard",CHILD:"child",WORKFLOW:"workflow",SYSTEM:"system"};class BdpPageAPI{constructor(){this._initialized=!1,this._registerEventListener=((e,t)=>{this.eventEmitter.on(e,t)}),this._removeEventListener=((e,t)=>{this.eventEmitter.removeListener(e,t)}),this._registerErrorListener=((e,t)=>{this.errorEmitter.on(e,t)}),this._removeErrorListener=((e,t)=>{this.errorEmitter.removeListener(e,t)}),this._newID=function(){return(new Date).valueOf()+"-"+Math.round(String(1e5*Math.random()))},this._callBdpApi=(async(e,t,i)=>(i||(i=this._newID()),window.parent.postMessage({call:e,value:t,id:i,type:"sent"},"*"),new Promise((e,t)=>this.apiEmitter.once(i,i=>i.err?t(i.err):e(i.value)))))}async initialize(e){if(!this.initialized){this.apiEmitter=new BdpEventEmitter,this.eventEmitter=new BdpEventEmitter,this.errorEmitter=new BdpEventEmitter,this.changeEmitter=new BdpEventEmitter;const t=e=>{const t=e.data;"object"==typeof t&&t.type&&("event"===t.type?this.eventEmitter.emit(t.id,t.value):"error"===t.type?this.errorEmitter.emit(t.id,t.value):"change"===t.type?this.changeEmitter.emit(t.value.target,t.value):(t.type="received",this.apiEmitter.emit(t.id,t)))};window.addEventListener("message",t,!1),e&&this.listenErrors(e)}await this._callBdpApi("handshake"),this._initialized=!0}get initialized(){return this._initialized}async getAuthToken(){return await this._callBdpApi("getAuthToken",{})}log(e){this._callBdpApi("log",JSON.stringify(e))}async listFiles(){return await this._callBdpApi("listFiles",{})}async listResults(){return await this._callBdpApi("listResults",{})}async listPackages(){return await this._callBdpApi("listPackages",{})}async getCurrentUserInfo(){return this._callBdpApi("getCurrentUserInfo")}async getCurrentFileInfo(){return this._callBdpApi("getCurrentFileInfo")}async getCurrentResultInfo(){return this._callBdpApi("getCurrentResultInfo")}async getCurrentPackageInfo(){return this._callBdpApi("getCurrentPackageInfo")}async getCurrentProjectInfo(){return this._callBdpApi("getCurrentProjectInfo")}async openFileLink(e){return await this._callBdpApi("openFileLink",{fileID:e})}async openResultLink(e){return await this._callBdpApi("openResultLink",{resultID:e})}async openStaticLink(e,t){return await this._callBdpApi("openStaticLink",{fileID:e,subPath:t||"/"})}async navigateToProjectList(e,t,i){await this._callBdpApi("navigateToProjectList",{listType:e||"myProjects",pageSize:t||30,pageIndex:i||0})}async navigateToProjectPage(e,t){await this._callBdpApi("navigateToProjectPage",{pageKey:e,packageID:t})}async navigateToFilePage(e,t,i){await this._callBdpApi("navigateToFilePage",{fileID:e,pageKey:t,packageID:i})}async navigateToResultPage(e,t,i){await this._callBdpApi("navigateToResultPage",{resultID:e,pageKey:t,packageID:i})}async navigateToBdpDataFile(e){await this._callBdpApi("navigateToBdpDataFile",{fileID:e})}async navigateToBdpResult(e){await this._callBdpApi("navigateToBdpResult",{resultID:e})}async createFolder(e,t,i,a,s,r,n){return await this._callBdpApi("createFolder",{name:e,desc:t,prefix:i,suffix:a,tags:Array.isArray(s)?s:[],folderId:r,folderId:r,keepFileName:n})}async getFileBlob(e,t,i,a){const s=this._newID();a&&this._registerErrorListener(s,a),i&&this._registerEventListener(s,i);const r=await this._callBdpApi("getFileBlob",{fileID:e,subPath:t},s);return i&&this._removeEventListener(s,i),a&&this._removeErrorListener(s,a),r}async getDownloadLink(e,t,i){return await this._callBdpApi("getDownloadLink",{fileID:e,subPath:t||null,authToken:i||""})}async globFilesInFolder(e,t){return this._callBdpApi("globFilesInFolder",{fileID:e,globbyExprs:t})}async importFileFromPath(e,t,i){return this._callBdpApi("importFileFromPath",{path:e,makeSymbolicLink:!!t,options:{name:i.name,prefix:i.prefix,suffix:i.suffix,desc:i.desc,tags:i.tags,folder:i.folder,keepFileName:!!i.keepFileName}})}async uploadFiles(e,t,i,a){const s=this._newID();i&&this._registerEventListener(s,i),a&&this._registerErrorListener(s,a);const r=await this._callBdpApi("uploadFiles",{files:e,options:{name:t.name,prefix:t.prefix,suffix:t.suffix,desc:t.desc,format:t.format,tags:t.tags,folderID:t.folderID,keepFileName:t.keepFileName}},s);return i&&this._removeEventListener(s,i),a&&this._removeErrorListener(s,a),r}async uploadFileBlob(e,t,i,a,s){const r=this._newID();a&&this._registerEventListener(r,a),s&&this._registerErrorListener(r,s);const n=await this._callBdpApi("uploadFileBlob",{fileBlob:e,name:t,prefix:i.prefix,suffix:i.suffix,desc:i.desc,tags:i.tags,format:i.format,folderID:i.folderID,keepFileName:!!i.keepFileName},r);return a&&this._removeEventListener(r,a),s&&this._removeErrorListener(r,s),n[0]}async updateFileInfo(e,t){return await this._callBdpApi("updateFileInfo",{fileID:e,newInfo:{name:t.name||void 0,desc:t.desc||void 0,tags:Array.isArray(t.tags)?t.tags:void 0,prefix:t.prefix||void 0,suffix:t.suffix}})}async deleteFile(e){return await this._callBdpApi("deleteFile",{fileID:e})}async getTaskArguments(e,t){return await this._callBdpApi("getTaskArguments",{identifier:e,packageID:t})}async getTaskInfo(e,t){return await this._callBdpApi("getTaskInfo",{identifier:e,packageID:t})}async listTasks(e,t){return await this._callBdpApi("listTasks",{packageID:e})}async listAllTasks(){return await this._callBdpApi("listAllTasks")}async getTaskInputGuide(e,t){return await this._callBdpApi("getTaskInputGuide",{identifier:e,packageID:t})}async executeTask(e,t,i,a,s,r){const n=this._newID();r&&this._registerErrorListener(n,r);const l=await this._callBdpApi("executeTask",{identifier:e,packageID:t,resultInfo:{name:i.name,desc:i.desc,prefix:i.prefix,suffix:i.suffix},inputs:a,outputs:s},n);return r&&this._removeErrorListener(n,r),l}async updateResultInfo(e,t){return await this._callBdpApi("updateResultInfo",{resultID:e,newInfo:{name:t.name||void 0,desc:t.desc||void 0,prefix:t.prefix||void 0,suffix:t.suffix}})}async stopResult(e){return await this._callBdpApi("stopResult",{resultID:e})}async deleteResult(e){return await this._callBdpApi("deleteResult",{resultID:e})}async refreshPage(){return await this._callBdpApi("refreshPage")}async isFullPage(){return await this._callBdpApi("isFullPage")}async toggleFullPage(e){return await this._callBdpApi("toggleFullPage",{isFullPage:e})}async isShownRightSideMemu(){return await this._callBdpApi("isShownRightSideMemu")}async toggleRightSideMenu(e){return await this._callBdpApi("toggleRightSideMenu",{isShown:e})}async isShownPageList(){return await this._callBdpApi("isShownPageList")}async togglePageList(e){return await this._callBdpApi("togglePageList",{mode:e})}watchResultChange(e){return this.changeEmitter.on("Result",e),{stop:()=>this.changeEmitter.removeListener("Result",e)}}stopWatchResultChange(e){this.changeEmitter.removeListener("Result",e)}watchFileChange(e){return this.changeEmitter.on("DataFile",e),{stop:()=>this.changeEmitter.on("DataFile")}}stopWatchFileChange(e){this.changeEmitter.removeListener("DataFile",e)}watchResultMsgChange(e){return this.changeEmitter.on("ResultMsg",e),{stop:()=>this.changeEmitter.removeListener("ResultMsg",e)}}stopWatchResultMsgChange(e){this.changeEmitter.removeListener("ResultMsg",e)}async requestHttp(e,t,i,a,s){const r=this._newID(),n=i.reportProgress&&"function"==typeof a;s&&this._registerErrorListener(r,s),n&&this._registerEventListener(r,a);const l=await this._callBdpApi("requestHttp",{path:e,method:t,httpOptions:{headers:i.headers,queryParams:i.queryParams,requestBody:i.requestBody,reportProgress:i.reportProgress,responseType:i.responseType,observe:i.observe}},r);return s&&this._removeErrorListener(r,s),n&&this._removeEventListener(r,a),l}async requestDatabase(e,t,i){return await this._callBdpApi("requestDatabase",{version:e,objectStoreSettings:t,creatingIndexes:i})}async requestDatabaseRemove(){return await this._callBdpApi("requestDatabaseRemove",{})}async dataStoreQuery(e,t,i,a,s){const r=this._newID();if("function"==typeof s&&(t=s,s="next"),!t||"function"!=typeof t)return;this._registerEventListener(r,t);const n=await this._callBdpApi("dataStoreQuery",{storeName:e,query:i,indexName:a,direction:s},r);return this._removeEventListener(r,t),n}async dataStoreGet(e,t,i){return await this._callBdpApi("dataStoreGet",{storeName:e,key:t,indexName:i})}async dataStoreAdd(e,t,i){return await this._callBdpApi("dataStoreAdd",{storeName:e,dataItems:t,dataKeys:i})}async dataStorePut(e,t,i){return await this._callBdpApi("dataStorePut",{storeName:e,dataItems:t,dataKeys:i})}async dataStoreCount(e,t){return await this._callBdpApi("dataStoreCount",{storeName:e,queryKeyRange:t||void 0})}async dataStoreClear(e){return await this._callBdpApi("dataStoreClear",{storeName:e})}async dataStoreRemove(e){return await this._callBdpApi("dataStoreRemove",{storeName:e})}}const BdpPageUtils={sleep:e=>new Promise(t=>setTimeout(()=>t(),1e3*e)),readFileBlob:(e,t)=>new Promise((i,a)=>{const s=new FileReader;switch(s.addEventListener("loadend",e=>i(e.target.result)),s.addEventListener("error",e=>a(e)),t){case"arrayBuffer":s.readAsArrayBuffer(e);break;case"binaryString":s.readAsBinaryString(e);break;default:s.readAsText(e)}})};window.BdpPageAPI=BdpPageAPI,window.BdpPageUtils=BdpPageUtils;